"""
Django settings for MSCValpo project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import mimetypes
import dj_database_url
from decouple import config
from dotenv import load_dotenv, find_dotenv

load_dotenv(find_dotenv())
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
mimetypes.add_type("text/css", ".css", True)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2@9tlgkcbmwysc@qmhz)*j$lvv5lno21dgl**3y3-#k54^0xf-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:8000",
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'BDmscv',
    'Template.apps.TemplateConfig',
    'rest_framework',
    'usuario',
    'corsheaders',
    'storages',
   
]
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
 
]
CORS_ORIGIN_ALLOW_ALL = True


ROOT_URLCONF = 'MSCValpo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR , 'Template' ),
            os.path.join(BASE_DIR , 'usuario' )
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MSCValpo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases



if DEBUG == False:
    
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'Mscvalpo',
            'USER': 'postgres',
            'PASSWORD': '741852963',
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }
else:
    #coneccion a la base de datos mediante una url a heroku
    DATABASES = {
            #Se crea una variavle de entorno DATABASE_URL que guarda la coneccion
            'default': dj_database_url.config(
                default = config('DATABASE_URL')
            )
        }
    


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/




STATIC_ROOT = os.path.join(BASE_DIR, 'root')

USE_S3 = 'TRUE'

if USE_S3:
        # aws settings
    AWS_ACCESS_KEY_ID = os.environ.get('AWSAccessKeyId')
    AWS_SECRET_ACCESS_KEY = os.environ.get('AWSSecretKey')
    AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
    AWS_DEFAULT_ACL = None
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
    # s3 static settings
    STATIC_LOCATION = 'static'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
    STATICFILES_STORAGE = 'MSCValpo.storage_backends.StaticStorage'
    # s3 public media settings
    PUBLIC_MEDIA_LOCATION = 'media'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
    DEFAULT_FILE_STORAGE = 'MSCValpo.storage_backends.PublicMediaStorage'
    # boto.cfg
    os.environ.setdefault('S3_USE_SIGV4', 'True')
    
else:
    STATIC_URL = '/static/'
    STATIC_ROOT=  os.path.join(BASE_DIR, 'static')
    MEDIA_URL = '/media/'
    MEDIA_ROOT=  os.path.join(BASE_DIR, 'media')
    
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)

#STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
#django no carga archivos estaticos en produccion

SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'

#con esta linea de codigo se puede mostrar img css y mas
"""
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

#AWS S3 config access credentials 
AWS_ACCESS_KEY_ID = 'AKIAZGP7M2H636BKNCZD'
AWS_SECRET_ACCESS_KEY = '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' 
AWS_STORAGE_BUCKET_NAME = 'valpoaws'
AWS_S3_REGION_NAME = 'us-east-2'
AWS_S3_ENDPOINT_URL = 'https://s3.us-east-2.amazonaws.com'

AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


S3DIRECT_DESTINATIONS = {
    'primary_destination': {
        'key': 'images/',
        'allowed': ['image/jpg', 'image/jpeg', 'image/png', 'video/mp4'],
    },
    'secondary_destination': {
        'key': 'videos/',
        'allowed': ['video/mp4'],
    },
    'tertiary_destination': {
        'key': 'files/',
    },
}
"""